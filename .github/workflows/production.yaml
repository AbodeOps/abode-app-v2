# name: Continuous Integration

# on:
#     push:
#         branches:
#             - 'main'

# jobs:
#     deploy:
#         runs-on: ubuntu-latest
#         env:
#             AWS_S3_BUCKET_NAME: dashboard.myabode.app
#             AWS_CF_DISTRIBUTION_ID: EC2RTPNG6NU4U
#             VITE_APP_APP_BASE: https://dashboard.myabode.app
#             VITE_APP_API_BASE: https://api.abode.ng/api
#         strategy:
#             matrix:
#                 node-version: [14.x]
#         steps:
#             - uses: actions/checkout@master
#             - name: Use Node.js ${{ matrix.node-version }}
#               uses: actions/setup-node@v1
#               with:
#                   node-version: ${{ matrix.node-version }}
#             - name: Install Dependencies
#               run: npm install
#             - name: Build Application
#               run: npm run-script build
#             - uses: jakejarvis/s3-sync-action@master
#               name: Upload App to S3 Bucket
#               with:
#                   args: --follow-symlinks --delete
#               env:
#                   AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET_NAME }}
#                   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#                   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#                   AWS_REGION: 'us-east-1'
#                   SOURCE_DIR: 'dist'
#             - name: Create CloudFront Cache Invalidation
#               uses: chetan/invalidate-cloudfront-action@master
#               env:
#                   DISTRIBUTION: ${{ env.AWS_CF_DISTRIBUTION_ID }}
#                   PATHS: '/*'
#                   AWS_REGION: 'us-east-1'
#                   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#                   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
name: Deploy Myabode Dashboard

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: yarn install

    - name: Build project with TypeScript errors ignored
      run: yarn build

    - name: Archive production artifacts
      run: tar -czf dist.tar.gz dist

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist

    - name: Prepare SSH Key
      run: |
        echo "${{ secrets.DO_PRIVATE_SSH_KEY }}" | tr -d '\r' > private_key
        chmod 600 private_key

    - name: Copy files via scp
      run: |
        scp -i private_key -o StrictHostKeyChecking=no dist/dist.tar.gz ${{ secrets.DO_USERNAME }}@${{ secrets.DO_HOST }}:/var/www/dashboard.myabode.app/html

    - name: Extract and Move files on server
      run: |
        ssh -i private_key -o StrictHostKeyChecking=no ${{ secrets.DO_USERNAME }}@${{ secrets.DO_HOST }} << 'EOF'
          cd /var/www/dashboard.myabode.app/html
          tar -xzvf dist.tar.gz
          mv dist/* .
          rm -rf dist dist.tar.gz
        EOF

    - name: Clean up
      run: rm -f private_key dist.tar.gz

    env:
      VITE_APP_APP_BASE: https://dashboard.myabode.app
      VITE_APP_API_BASE: https://api.abode.ng/api

